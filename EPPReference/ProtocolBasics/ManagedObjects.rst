


FRED-managed objects
====================

The FRED EPP uses custom representations of registrable objects:

* domain,
* contact,
* nsset = a set of name servers,
* keyset = a set of DNSSEC keys.

Custom managed objects are object-level extensions of EPP and they can appear
in these XPaths:

* standard commands: :samp:`/epp/command/{$std-cmd}/{$object}:{$std-cmd}`
* extending commands: :samp:`/epp/extension/fred:extcommand/fred:{$ext-cmd}/{$object}:{$ext-cmd}`

Substitutions in the paths:

*$std-cmd* can be a name of a standard object-related command, such as ``create``, |br|
*$ext-cmd* can be a name of an extending object-related command, such as ``sendAuthInfo``, |br|
*$object* is a prefix for an object namespace.

.. contents:: Chapter TOC
   :local:

.. _props-common:

Common object attributes
------------------------

Each managed object has the following attributes:

.. @see DP 3.1

ROID
   Repository object identifier. An id that is generated by the server
   during object creation.

   This id should uniquely identify the object world-wide. It is composed
   of two parts separated with a hyphen. The first part is unique within the
   repository and defined by the Registry. The second part must be unique
   world-wide, it is assigned for the whole repository by the IANA organization.

clID
   Identifier of the current designated registrar.

upID
   Identifier of the registrar who was the last to update this object.

crDate
   Date and time of the creation of this object in the repository.

upDate
   Date and time of the last update of this object.

trDate
   Date and time of the last transfer of this object.

authInfo
   Authorization information (transfer password).

status
   Current object status (possible values are object-specific).

..
   TODO:: význam stavů pro jednotlivé objekty

   https://trac.nic.cz/wiki/devel/reg-objects/states

   ale s jménem stavu se vrací i textový popis

   .. TODO:: formát doménového jména (zony v registru) + handlů

   (11:41:30) Jan Zima: https://trac.nic.cz/wiki/devel/fred/epp/backend/spec#checkFQDNHandleFormat |br|
   (11:42:01) Jan Zima: https://trac.nic.cz/wiki/devel/fred/epp/backend/spec#checkDNSserverHostname |br|
   (11:42:24) Jan Zima: https://trac.nic.cz/wiki/devel/fred/epp/backend/spec#checkDNSserverIPaddressSyntax |br|
   (11:43:16) Jan Zima: https://trac.nic.cz/wiki/devel/fred/epp/backend/spec#checkHandleFormat



Domains
-------

Namespace: \http://www.nic.cz/xml/epp/domain-1.4 |br|
Schema: domain-1.4.xsd

.. NOTE:: https://tools.ietf.org/html/rfc5731#section-2

Object attributes
^^^^^^^^^^^^^^^^^

In addition to the :ref:`common attributes <props-common>`, domains also have
the following attributes:

name
   The domain name handle.

registrant
   The handle of the domain owner contact.

admin
   The handle of an administrative contact. (Can have multiple.)

nsset
   The handle of a nameserver set.

keyset
   The handle of a DNSSEC-key set.

exDate
   The date of domain name expiration.

valExDate :sup:`ENUM only`
   The date of the expiration of ENUM domain validation.

publish :sup:`ENUM only`
   Flag of publishing in ENUM dictionary.

Object states
^^^^^^^^^^^^^^^^^
.. todo:: domain object states

Command-response mapping
^^^^^^^^^^^^^^^^^^^^^^^^

For command-response mapping see a specific command syntax description:

* :doc:`domain:check <../CommandStructure/Check/CheckDomain>`
* :doc:`domain:create <../CommandStructure/Create/CreateDomain>`
* :doc:`domain:delete <../CommandStructure/Delete/DeleteDomain>`
* :doc:`domain:info <../CommandStructure/Info/InfoDomain>`
* :doc:`domain:renew <../CommandStructure/Renew/RenewDomain>`
* :doc:`domain:transfer <../CommandStructure/Transfer/TransferDomain>`
* :doc:`domain:update <../CommandStructure/Update/UpdateDomain>`
* :doc:`domain:sendAuthInfo <../CommandStructure/SendAuthInfo/SendAuthInfoDomain>`

.. top-level elements

   command TLE: ``<domain:check>``, ``<domain:create>``, ``<domain:delete>``,
   ``<domain:info>``, ``<domain:renew>``, ``<domain:transfer>``, ``<domain:update>``,
   ``<domain:sendAuthInfo>`` :sup:`EXT`

   response data TLE: ``<domain:chkData>``, ``<domain:creData>``, ``<domain:infData>``,
   ``<domain:renData>``

   poll msg TLE: ``<domain:trnData>``, ``<domain:impendingExpData>``, ``<domain:expData>``,
   ``<domain:dnsOutageData>``, ``<domain:delData>``, ``<domain:updateData>``

   ENUM poll msg TLE: ``enumval:impendingValExpData``, ``enumval:valExpData``



Contacts
--------

Namespace: \http://www.nic.cz/xml/epp/contact-1.6 |br|
Schema: contact-1.6.xsd

.. NOTE:: https://tools.ietf.org/html/rfc5733#section-2

Object attributes
^^^^^^^^^^^^^^^^^

In addition to the :ref:`common attributes <props-common>`, contacts also have
the following attributes:

id
   The contact handle.

postalInfo
   Information for the purpose of ordinary mailing, consisting of:

   name
      The contact name. (personal or company)

   org
      The name of an organization.

   addr
      The real-world contact address, consisting of:

      street
         Street line.

      city
         City.

      sp
         State or province.

      pc
         Postal code.

      cc
         Country code.

voice
   Phone number.

fax
   Fax number.

email
   Email address(es).

notifyEmail
   Notification email address(es).

vat
   VAT-payer identifier.

ident
   Identity-document type and number. (A document that proves the contact's identity.)

disclose
   Disclosure preference for: addr, voice, fax, email, vat, ident, notifyEmail.

   .. Note:: The contact handle, name and organization are always disclosed.

.. top-level elements

   command TLE: ``<contact:check>``, ``<contact:create>``, ``<contact:delete>``,
   ``<contact:info>``, ``<contact:transfer>``, ``<contact:update>``,
   ``<contact:sendAuthInfo>``

   response data TLE: ``<contact:chkData>``, ``<contact:creData>``, ``<contact:infData>``

   poll msg TLE: ``<contact:trnData>``, ``<contact:idleDelData>``, ``<contact:updateData>``

Object states
^^^^^^^^^^^^^^^^^
.. todo:: contact object states

Command-response mapping
^^^^^^^^^^^^^^^^^^^^^^^^

For command-response mapping see a specific command syntax description:

* :doc:`contact:check <../CommandStructure/Check/CheckContact>`
* :doc:`contact:create <../CommandStructure/Create/CreateContact>`
* :doc:`contact:delete <../CommandStructure/Delete/DeleteContact>`
* :doc:`contact:info <../CommandStructure/Info/InfoContact>`
* :doc:`contact:transfer <../CommandStructure/Transfer/TransferContact>`
* :doc:`contact:update <../CommandStructure/Update/UpdateContact>`
* :doc:`contact:sendAuthInfo <../CommandStructure/SendAuthInfo/SendAuthInfoContact>`



Nssets
------

Namespace: \http://www.nic.cz/xml/epp/nsset-1.2 |br|
Schema: nsset-1.2.xsd

.. top-level elements

   command TLE: ``<nsset:check>``, ``<nsset:create>``, ``<nsset:delete>``,
   ``<nsset:info>``, ``<nsset:transfer>``, ``<nsset:update>``,
   ``<nsset:sendAuthInfo>``, ``<nsset:test>``

   response data TLE: ``<nsset:chkData>``, ``<nsset:creData>``, ``<nsset:infData>``

   poll msg TLE: ``<nsset:trnData>``, ``<nsset:idleDelData>``, ``<nsset:updateData>``, ``<nsset:testData>``

Object attributes
^^^^^^^^^^^^^^^^^

In addition to the :ref:`common attributes <props-common>`, nssets also have
the following attributes:

id
   The nsset handle.

ns
   The nameserver(s), consisting of:

   name
      Nameserver hostname.

   addr
      Nameserver IP address(es).

tech
   The handle(s) of technical contact(s).

reportlevel
   The level of technical checks to be reported when a check of nameservers
   is requested.

Object states
^^^^^^^^^^^^^^^^^
.. todo:: nsset object states

Command-response mapping
^^^^^^^^^^^^^^^^^^^^^^^^

For command-response mapping see a specific command syntax description:

* :doc:`nsset:check <../CommandStructure/Check/CheckNsset>`
* :doc:`nsset:create <../CommandStructure/Create/CreateNsset>`
* :doc:`nsset:delete <../CommandStructure/Delete/DeleteNsset>`
* :doc:`nsset:info <../CommandStructure/Info/InfoNsset>`
* :doc:`nsset:transfer <../CommandStructure/Transfer/TransferNsset>`
* :doc:`nsset:update <../CommandStructure/Update/UpdateNsset>`
* :doc:`nsset:test <../CommandStructure/TestNsset>`
* :doc:`nsset:sendAuthInfo <../CommandStructure/SendAuthInfo/SendAuthInfoNsset>`



Keysets
-------

Namespace: \http://www.nic.cz/xml/epp/keyset-1.3 |br|
Schema: keyset-1.3.xsd

.. top-level elements

   command TLE: ``<keyset:check>``, ``<keyset:create>``, ``<keyset:delete>``,
   ``<keyset:info>``, ``<keyset:transfer>``, ``<keyset:update>``,
   ``<keyset:sendAuthInfo>``, ``<keyset:test>``

   response data TLE: ``<keyset:chkData>``, ``<keyset:creData>``, ``<keyset:infData>``

   poll msg TLE: ``<keyset:trnData>``, ``<keyset:idleDelData>``, ``<keyset:updateData>``, ``<keyset:testData>``

Object attributes
^^^^^^^^^^^^^^^^^

In addition to the :ref:`common attributes <props-common>`, keysets also have
the following attributes:

id
   The keyset handle.

dnskey
   The DNSSEC key(s), consisting of:

   flags
      Flags.

   protocol
      Protocol.

   alg
      Algorithm.

   pubKey
      Public key.

tech
   The handle(s) of technical contact(s).

Object states
^^^^^^^^^^^^^^^^^
.. todo:: keyset object states

Command-response mapping
^^^^^^^^^^^^^^^^^^^^^^^^

For command-response mapping see a specific command syntax description:

* :doc:`keyset:check <../CommandStructure/Check/CheckKeyset>`
* :doc:`keyset:create <../CommandStructure/Create/CreateKeyset>`
* :doc:`keyset:delete <../CommandStructure/Delete/DeleteKeyset>`
* :doc:`keyset:info <../CommandStructure/Info/InfoKeyset>`
* :doc:`keyset:transfer <../CommandStructure/Transfer/TransferKeyset>`
* :doc:`keyset:update <../CommandStructure/Update/UpdateKeyset>`
* :doc:`keyset:sendAuthInfo <../CommandStructure/SendAuthInfo/SendAuthInfoKeyset>`
